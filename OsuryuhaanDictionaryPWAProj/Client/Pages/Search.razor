@page "/search"
@using System.Text;

@inject IWordService WordService;

<PageTitle>Search</PageTitle>
<link rel="stylesheet" href="~/css/app.css"/>
<div class="bd-main-interface">
    <main class="bd-interface-body h-100 justify-content-md-center pt-4">
        <div class="container-fluid d-flex justify-content-sm-center mb-4" id="searchbar">
            <div class="btn-toolbar" role="toolbar" aria-label="SearchBar" >
                <div class="input-group" style="width: 75vw;">
                        <input type="text" class="form-control rounded-pill" placeholder="Enter a sentence or word in Kayanese or in English." aria-label="Searchbar">
                        <button class="btn justify-content-center position-relative" type="button">Clear</button>
                        <button class="btn btn-primary rounded-pill position-relative" type="button">Go</button>
                </div>
            </div>
        </div>
        <div class="card row flex-row flex-column h-100">
            <div class="card-header d-inline">
                <h4>Results</h4>
            </div>
            <div class="card-body">
                <div class="container-fluid justify-content-md-center" id="search-query">
                    <div class="list-group list-group-flush mh-100">
                        <!--Just a mock-->
                        @{
                            StringBuilder builder = new StringBuilder();
                            for (int i = 0; i < WordService.Words.Count; i++)
                            {
                                var word = WordService.Words[i];
                                var definitions = word.Definition?.Split(';', StringSplitOptions.RemoveEmptyEntries);
                                builder.Append(word.Name);
                                builder.Append(i);
                                <button class="list-group-item search-entry text-start pb-2">
                                    <!--Word and Definition(s)-->
                                    <div class="container-md-2">
                                        <h3 class="de-word fw-semibold">@word.Name</h3>
                                        @{
                                            var index = 1;
                                            foreach(string definition in definitions!)
                                            {
                                                var indexString = $"{index}. {definition}";
                                                <p class="de-def p-0 m-0">@indexString</p>
                                                index++;
                                            }
                                        }
                                    </div>
                                    <!--Example Sentences-->
                                    <div class="container-md-2">
                                    
                                    </div>
                                    <!--Miscellaneous-->
                                    <div class="container-md-2 pt-2">
                                        <a class="float-start text-start" href="#">View More Info</a>
                                        <p class="float-end">Common</p>
                                    </div>
                                </button>
                                builder.Clear();
                            }
                        }
                    </div>
                </div>      
            </div>
        </div>
    </main>
</div>

@code {
    protected override void OnInitialized()
    {
        MainLayout.ChangeHeaderName("Search");
    }

    protected override async Task OnInitializedAsync()
    {
        await WordService.GetWords();
    }
}
